#!/bin/bash

# Install MakeJames/dotfiles in local system.
# LICENCE: MIT

set -o errexit
set -o nounset
set -o pipefail

work_path=$(dirname "$(readlink -f "$0")")
readonly script_name="${0##*/}"

readonly parse_options_err="81"

debug_flag=0

trap clean_up ERR EXIT SIGINT SIGTERM

usage () {
    cat <<USAGE_TEXT
MakeJames Dotfiles install.
Usage: ${script_name} [-h | --help]
DESCRIPTION
    Installation script for MakeJames Dotfiles. 
OPTIONS:
-h, --help
        Print this help and exit.
--debug
        Print additional informational and debug statements
USAGE_TEXT
}

clean_up () {
    trap - ERR EXIT SIGINT SIGTERM
}

die() {
    local -r msg="${1}"
    local -r code="${2:-90}"
    echo "${msg}" >&2
    exit "${code}"
}

setup () {
    mkdir -p "${HOME}"/Profile/archive
    cat <<INIT_TEXT
MakeJames Dotfiles
==================
Welcome!
INIT_TEXT
}

archive () {
    if (( "${debug_flag}" > 0 )); then
	echo "Moving old ${1}"
    fi
    mv "${HOME}"/"${1}" "${HOME}"/Profile/archive/"${1}"-"$(date '+%Y-%m-%d-%H-%M-%S')"
}

parse_options () {
    local -r args=("${@}")
    local opts
    opts=$(getopt --options h --long help,debug -- "${args[@]}" 2> /dev/null) || {
	die "error: parsing options" "${parse_options_err}"
    }

    eval set -- "${opts}"

    while true; do
        case "${1}" in
            --help|-h)
                usage
                exit 0
                ;;
            --debug)
                debug_flag=1
                shift
                ;;
            *)
                break
                ;;
             esac
        done
}

parse_options "${@}"

setup

# ==================
# Install .gitconfig
# ==================

if [ -f "${HOME}"/.gitconfig ]; then
    archive .gitconfig
fi

if [ -L "${HOME}"/.gitconfig ]; then
    rm "${HOME}"/.gitconfig
fi

if (( "${debug_flag}" > 0 )); then
    echo "Linking .gitconfig"
fi

ln "${work_path}"/git/.gitconfig "${HOME}"/.gitconfig

# ==================
# Install .bash_aliases
# ==================

if [ -f "${HOME}"/.bash_aliases ]; then
    archive .bash_aliases
fi

if [ -L "${HOME}"/.bash_aliases ]; then
    rm "${HOME}"/.bash_aliases
fi

if (( "${debug_flag}" > 0 )); then
    echo "Linking .bash_aliases"
fi

ln "${work_path}"/bash/.bash_aliases "${HOME}"/.bash_aliases

# ==================
# Install .vimrc
# ==================

if [ -f "${HOME}"/.vimrc ]; then
    archive .vimrc
fi

if [ -L "${HOME}"/.vimrc ]; then
    rm "${HOME}"/.vimrc
fi

if (( "${debug_flag}" > 0 )); then
    echo "Linking .vimrc"
fi

ln "${work_path}"/vim/.vimrc-minimal "${HOME}"/.vimrc
